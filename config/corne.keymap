#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"

#include "zmk-helpers/key-labels/42.h"

// https://github.com/urob/zmk-config

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/currency.dtsi"
#include "zmk-helpers/unicode-chars/german.dtsi"
#include "zmk-helpers/unicode-chars/french.dtsi"

#define ___ &trans

#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs
#define PINKY_L LT5 LM5 LB5
#define PINKY_R RT5 RM5 RB5


#undef COMBO_TERM
#define COMBO_TERM 50

#define TAPPING_TERM_MS 220
#define PRIOR_IDLE_MS 250

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM_MS>;
    require-prior-idle-ms = <PRIOR_IDLE_MS>;
    hold-trigger-key-positions = <PINKY_L PINKY_R KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM_MS>;
    require-prior-idle-ms = <PRIOR_IDLE_MS>;
    hold-trigger-key-positions = <PINKY_L PINKY_R KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

&caps_word {
    continue-list = <UNDERSCORE MINUS DE_MINUS DE_COMMA DE_DOT>;
};

// combos
ZMK_COMBO(select_all,   &kp LC(DE_A),    LB4 LM4, ALL)
ZMK_COMBO(save,         &kp LC(DE_S),    LB3 LM3, ALL)
ZMK_COMBO(search,       &kp LC(DE_F),    LB1 LM1, ALL)

ZMK_COMBO(undo,         &kp LC(DE_Z),    RT0 RM0, ALL)
ZMK_COMBO(undo_2,       &kp LC(DE_Z),    RM5 RT5, ALL)
ZMK_COMBO(undo_3,       &kp LC(DE_Z),    LT0 LT1, ALL)
ZMK_COMBO(redo,         &kp LC(DE_Y),    LB3 LB4, ALL)

ZMK_COMBO(home,         &kp HOME,               RB3 RB4, ALL)
ZMK_COMBO(end,          &kp END,                RB4 RB5, ALL)
ZMK_COMBO(ctrl_bspc,    &kp LC(BSPC),           RT4 RT5, ALL)
ZMK_COMBO(ctrl_del,     &kp LC(DELETE),         RM4 RM5, ALL)

ZMK_COMBO(ctrl_alt_del,     &kp LC(LA(DELETE)),   LT4 LT5, ALL)
ZMK_COMBO(alt_f4,           &kp LA(F4),           LT5 RT5, ALL)

ZMK_COMBO(cut,    &kp LC(DE_X), LB2 LB3, ALL)
ZMK_COMBO(copy,   &kp LC(DE_C), LB1 LB2, ALL)
ZMK_COMBO(paste,  &kp LC(DE_V), LB0 LB1, ALL)

// ZMK_COMBO(lock_screen,  &kp LG(DE_L), RM2 RM3, ALL)

// jetbrains
ZMK_COMBO(ctrl_q,       &kp LC(DE_Q),       LM4 LT4, ALL)
ZMK_COMBO(ctrl_p,       &kp LC(DE_P),       RM4 RT4, ALL)
ZMK_COMBO(ctrl_d,       &kp LC(DE_D),       LM2 LB2, ALL)
ZMK_COMBO(ctrl_r,       &kp LC(DE_R),       LM1 LT1, ALL)
ZMK_COMBO(ctrl_t,       &kp LC(DE_T),       LM0 LT0, ALL)
ZMK_COMBO(ctrl_alt_o,   &kp LC(LA(DE_O)),   RM3 RT3, ALL)
ZMK_COMBO(ctrl_alt_l,   &kp LC(LA(DE_L)),   RB3 RM3, ALL)
ZMK_COMBO(comment,      &kp LC(KP_DIVIDE),  RB5 RM5, ALL)

ZMK_LAYER(default_layer,
//  ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮        ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮
        &lt SYM ESCAPE  &kp DE_Q            &kp DE_W            &kp DE_E            &kp DE_R            &kp DE_T                    &kp DE_Z        &kp DE_U            &kp DE_I            &kp DE_O            &kp DE_P            &kp BSPC
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        &lt NUM TAB     &hml LGUI DE_A      &hml LALT DE_S      &hml LCTRL DE_D     &hml LSHFT DE_F     &kp DE_G                    &kp DE_H        &hmr RSHFT DE_J     &hmr LCTRL DE_K     &hmr LALT DE_L      &hmr LGUI UP_ARROW  &lt NUM DELETE
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        &kp LSHFT       &caps_word          &kp DE_Y            &kp DE_X            &kp DE_C            &kp DE_V                    &kp DE_B        &kp DE_N            &kp DE_M            &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW
//  ╰─────────────────────────────────────────────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────╯
                                                                &lt SYM DE_MINUS    &lt FUN DE_COMMA    &kp ENTER                   &kp SPACE       &lt FUN DE_COMMA    &lt SYM DE_DOT
//                                                            ╰───────────────────┴──────────────────┴─────────────────╯        ╰─────────────────┴───────────────────┴───────────────────╯
)

ZMK_LAYER(number_layer,
//  ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮        ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮
        ___             &kp DE_A_UMLAUT     &kp DE_O_UMLAUT     &kp DE_U_UMLAUT     &kp DE_SZ           &none                       &kp DE_N7       &kp DE_N8           &kp DE_N9           &kp DE_PLUS         &kp DE_STAR         ___
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &hml LGUI DE_CARET  &hml LALT DE_ACUTE  &hml LCTRL DE_GRAVE &kp LSHFT           &fr_c_cedilla               &kp DE_N4       &hmr RSHFT DE_N5    &hmr LCTRL DE_N6    &hmr LALT DE_MINUS  ___                 ___
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &caps_word          &kp DE_TILDE        &kp DE_DEG          &none               &none                       &kp DE_N1       &kp DE_N2           &kp DE_N3            ___                ___                 ___
//  ╰─────────────────────────────────────────────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────╯
                                                                ___                 ___                 ___                         ___             &kp DE_N0           &kp DE_DOT
//                                                            ╰───────────────────┴──────────────────┴─────────────────╯        ╰─────────────────┴───────────────────┴───────────────────╯
)

ZMK_LAYER(symbol_layer,
//  ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮        ╭─────────────────┬───────────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮
        ___             &kp DE_SQT          &kp DE_DQT          &kp DE_AMPERSAND    &kp DE_PERCENT      &kp DE_HASH                 &kp DE_EXCL     &kp DE_QUESTION         &kp DE_EQUAL        &kp DE_LPAR         &kp DE_RPAR         ___
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &hml LGUI DE_AT     &hml LALT DE_EURO   &hml LCTRL DE_DLLR  &hml LSHFT DE_PRCNT &none                       &kp DE_SLASH    &hmr RSHFT DE_BSLH      &hmr LCTRL DE_PIPE  &hmr LALT DE_LBKT   &hmr LGUI DE_RBKT   ___
//  ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &caps_word          &kp DE_LT           &kp DE_GT           &none               &none                       &kp DE_COMMA    &kp DE_DOT              &kp DE_MINUS        &kp DE_LBRC         &kp DE_RBRC         ___
//  ╰─────────────────────────────────────────────────────────┼───────────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────╯
                                                                ___                 ___                 ___                         ___             &kp DE_COMMA            &kp DE_DOT
//                                                            ╰───────────────────┴──────────────────┴─────────────────╯        ╰─────────────────┴───────────────────────┴───────────────────╯
)

ZMK_LAYER(function_layer,
//  ╭─────────────────┬───────────────────────┬───────────────────┬───────────────┬──────────────────┬─────────────────╮        ╭─────────────────┬───────────────────┬───────────────────┬───────────────────┬──────────────────┬─────────────────╮
        ___             &kp PSCRN               &kp F1              &kp F2          &kp F3              &kp F4                      &none           &none               &none               &none               &none               ___
//  ├─────────────────┼───────────────────────┼───────────────────┼───────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &hml LGUI PAUSE_BREAK   &hml LALT F5        &hml LCTRL F6   &hml LSHFT F7       &kp F8                      &none           &kp RSHIFT          &kp LCTRL           &kp LALT            &hmr LGUI PG_UP      ___
//  ├─────────────────┼───────────────────────┼───────────────────┼───────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────┤
        ___             &kp INSERT              &kp F9              &kp F10         &kp F11             &kp F12                     &kp C_MUTE      &kp C_VOL_DN        &kp C_VOL_UP        &kp HOME            &kp PG_DN           &kp END
//  ╰─────────────────────────────────────────────────────────────┼───────────────┼──────────────────┼─────────────────┤        ├─────────────────┼───────────────────┼───────────────────┼───────────────────┼──────────────────┼─────────────────╯
                                                                    ___             ___                 ___                         ___             ___                 ___
//                                                                ╰───────────────┴──────────────────┴─────────────────╯        ╰─────────────────┴───────────────────┴───────────────────╯
)

&led_strip { chain-length = <27>; };

&nice_view_spi { cs-gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>; };
